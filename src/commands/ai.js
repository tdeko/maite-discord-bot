module.exports.run = async (message, args) => {
    try {
        // üîπ Lecture des arguments
        let temperature = 0.5;
        if (args[0]?.includes('.') && !isNaN(parseFloat(args[0])))
            temperature = Math.min(Math.max(parseFloat(args.shift()), 0), 2);

        const prompt = args.join(' ').trim();
        if (!prompt)
            return message.reply("B√©casse, tu dois √©crire un message apr√®s la commande !");

        await message.channel.sendTyping();

        // üîπ Message syst√®me : personnalit√©
        const systemMessage = `
            Tu es Ma√Øt√© Ordonez, une femme de 60 ans passionn√©e de cuisine et de vie quotidienne.
            Tu es simple, taquine, affectueuse, et tu appelles souvent les gens ‚Äúb√©casse‚Äù.
            Par d√©faut, r√©ponds en moins de 20 mots sauf si on te demande d'expliquer ou raconter.
        `.trim();

        // üîπ Envoi de la requ√™te OpenRouter
        const response = await fetch('https://openrouter.ai/api/v1/chat/completions', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'Authorization': `Bearer ${process.env.OPENROUTER_API_KEY}`,
                'HTTP-Referer': process.env.APP_URL || 'http://localhost:3000',
                'X-Title': 'Ma√Øt√© Discord Bot'
            },
            body: JSON.stringify({
                // ‚ö†Ô∏è mod√®le √† jour et dispo
                model: 'mistralai/mixtral-8x7b-instruct',
                messages: [
                    { role: 'system', content: systemMessage },
                    { role: 'user', content: prompt }
                ],
                temperature,
                max_tokens: 500
            })
        });

        // üîπ Lecture de la r√©ponse JSON
        const data = await response.json();
        // console.log("üß† [AI DEBUG] Raw response:", JSON.stringify(data, null, 2));

        // üîπ V√©rifie le statut HTTP
        if (!response.ok) {
            console.error("üß† [AI ERROR] HTTP", response.status, response.statusText);
            return message.reply(`Erreur HTTP ${response.status} : ${data?.error?.message || 'aucune info'}`);
        }

        // üîπ V√©rifie le contenu de la r√©ponse
        const reply = data?.choices?.[0]?.message?.content?.trim();
        if (!reply) {
            const err = data?.error?.message || JSON.stringify(data);
            console.error("üß† [AI ERROR] Pas de contenu :", err);
            return message.reply("Oh la la, Bonux n‚Äôa rien r√©pondu üò≥");
        }

        // üîπ Envoie la r√©ponse finale
        await message.channel.send(reply);

    } catch (e) {
        console.error("üß† [AI ERROR - exception]:", e);
        message.reply("Oups ma b√©casse, j‚Äôai renvers√© la lessive !");
    }
};


// module.exports.run = async (message, args) => {
//     try {
//         let temperature = 0.5;
//         if (args[0]?.includes('.') && !isNaN(parseFloat(args[0])))
//             temperature = Math.min(Math.max(parseFloat(args.shift()), 0), 2);

//         const prompt = args.join(' ').trim();
//         if (!prompt) return message.reply("B√©casse, tu dois √©crire un message apr√®s la commande !");

//         await message.channel.sendTyping();

//         const systemMessage = `
//             Tu es Ma√Øt√© Ordonez, une femme de 60 ans passionn√©e de cuisine et de vie quotidienne.
//             Tu es simple, taquine, affectueuse, et tu appelles souvent les gens ‚Äúb√©casse‚Äù.
//             Par d√©faut, r√©ponds en moins de 20 mots sauf si on te demande d'expliquer ou raconter.
//         `.trim();

//         const response = await fetch('https://openrouter.ai/api/v1/chat/completions', {
//             method: 'POST',
//             headers: {
//                 'Content-Type': 'application/json',
//                 'Authorization': `Bearer ${process.env.OPENROUTER_API_KEY}`,
//                 'HTTP-Referer': process.env.APP_URL || 'http://localhost:3000',
//                 'X-Title': 'Ma√Øt√© Discord Bot'
//             },
//             body: JSON.stringify({
//                 model: 'google/gemma-3-27b-it:free',
//                 messages: [
//                     { role: 'system', content: systemMessage },
//                     { role: 'user', content: prompt }
//                 ],
//                 temperature,
//                 max_tokens: 500
//             })
//         });

//         const data = await response.json();
//         const reply = data?.choices?.[0]?.message?.content?.trim();
//         message.channel.send(reply || "Oh la la, Bonux n‚Äôa rien r√©pondu üò≥");
//     } catch (e) {
//         console.error(e);
//         message.reply("Oups ma b√©casse, j‚Äôai renvers√© la lessive !");
//     }
// };
